void merge_sort(int l, int r)
{
	if (l == r) 
		return;	//拆分成单个数，返回					 
	int mid = (l + r) / 2;//二分
	merge_sort(l, mid);//对前半部分进行归并排序
	merge_sort(mid + 1, r);//对后半部分进行归并排序
	int p = l, i = l, j = mid + 1;
	while (i <= mid && j <= r) {
		if (a[i] > a[j]) 
			temp[p++] = a[j++];//后半部分小于前半部分，存入temp 
		else 
			temp[p++] = a[i++];//前半部分的值较小，直接存入temp		 
	}
	while (i <= mid) 
		temp[p++] = a[i++];//未存入的较大的值存入temp		 
	while (j <= r) 
		temp[p++] = a[j++];
	for (int i = l; i <= r; i++)
		a[i] = temp[i];	//更新a在l到r区间上的值						 
}
